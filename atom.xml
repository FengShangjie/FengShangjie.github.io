<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>_King&#39;s Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yydwb.club/"/>
  <updated>2018-07-15T09:05:11.789Z</updated>
  <id>https://yydwb.club/</id>
  
  <author>
    <name>_king</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python3-re</title>
    <link href="https://yydwb.club/2018/07/13/python3-re/"/>
    <id>https://yydwb.club/2018/07/13/python3-re/</id>
    <published>2018-07-13T09:55:25.000Z</published>
    <updated>2018-07-15T09:05:11.789Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python3中正表达式中的用法笔记"><a href="#python3中正表达式中的用法笔记" class="headerlink" title="python3中正表达式中的用法笔记"></a>python3中正表达式中的用法笔记</h1><p>由于自己对正则表达式不是很熟悉，自己就重新学习了一下这个正则表达式。下面是我学习正则表达式的一些笔记，自己主要是用于备忘与查询<br><a id="more"></a></p><h3 id="1、元字符"><a href="#1、元字符" class="headerlink" title="1、元字符"></a>1、元字符</h3><table><thead><tr><th>序号</th><th>字符</th><th>说明</th></tr></thead><tbody><tr><td>1</td><td>\</td><td>转义符，表示转义</td></tr><tr><td>2</td><td>.</td><td>表示任意一个字符</td></tr><tr><td>3</td><td>+</td><td>重复一次或者多次</td></tr><tr><td>4</td><td>*</td><td>重复零次或者多次</td></tr><tr><td>5</td><td>?</td><td>重复零次或者一次</td></tr><tr><td>6</td><td>\</td><td></td><td>选择符号，表示“或关系”，例如A\</td><td>B 表示匹配A或B</td></tr><tr><td>7</td><td>{}</td><td>定义量词</td></tr><tr><td>8</td><td>[]</td><td>定义字符类</td></tr><tr><td>9</td><td>()</td><td>定义分组</td></tr><tr><td>10</td><td>^</td><td>可以表示取反， 或者匹配一行的开始</td></tr><tr><td>11</td><td>$</td><td>匹配一行的结束</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">p1 = <span class="string">r'\w+@zhijieketang\.com'</span>  <span class="comment">#没有规定字符位置匹配字符</span></span><br><span class="line">p2 = <span class="string">r'^\w+@zhijieketang\.com$'</span>  <span class="comment">#规定了必须要以.com结尾</span></span><br><span class="line"></span><br><span class="line">text = <span class="string">"Tony's email is tony_guan588@zhijieketang.com."</span></span><br><span class="line"></span><br><span class="line">m =  re.search(p1, text)<span class="comment">#p1与text匹配</span></span><br><span class="line"><span class="comment">#输出为&lt;_sre.SRE_Match object; span=(16, 45), match='tony_guan588@zhijieketang.com'&gt;</span></span><br><span class="line">print(m) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m =  re.search(p2, text) <span class="comment">#p2与text匹配</span></span><br><span class="line"><span class="comment">#输出为None</span></span><br><span class="line">print(m)</span><br><span class="line"></span><br><span class="line">email = <span class="string">'tony_guan588@zhijieketang.com'</span></span><br><span class="line">m =  re.search(p2, email)<span class="comment">#p2与email匹配</span></span><br><span class="line"><span class="comment">#输出为&lt;_sre.SRE_Match object; span=(0, 29), match='tony_guan588@zhijieketang.com'&gt;</span></span><br><span class="line">print(m)</span><br></pre></td></tr></table></figure><h3 id="2、预定义字符类"><a href="#2、预定义字符类" class="headerlink" title="2、预定义字符类"></a>2、预定义字符类</h3><p>==这里包括一些长用的字符表现形式，我们在c语言中经常使用==<br>字符 | 说明<br>–|–<br>. | 匹配任意一个字符<br>\\ | 匹配反斜杠\字符<br>\n | 匹配换行<br>\r | 匹配回车<br>\f | 匹配一个换页符<br>\t | 匹配一个水平制表符<br>\v | 匹配一个垂直制表符<br>\s | 匹配一个空格符，等价于[\n\r\f\t\v]<br>\S | 匹配一个非空格符，等价于[^\s]<br>\d | 匹配一个数字字符，等价于[0-9]<br>\D | 匹配一个非数字字符，等价于[^0-9]<br>\w | 匹配任何语言的单词字符(如：英文字母、亚洲文字)、数字和下划线(_)等字符。如果正则表达式编译标志设置为ASCII，则指匹配[a-z0-9A-Z]<br>\W | 相当于[6\w]</p><h3 id="3、字符类"><a href="#3、字符类" class="headerlink" title="3、字符类"></a>3、字符类</h3><p>这里主要包含着如何定义一个字符类(与其他的字符类是<br>不同的这里面主要使用 <code>[]</code> 来做定义类。)</p><p><code>r&#39;[0123456789]&#39;</code> 表示数字集</p><p><code>r&#39;[^0123456789]&#39;</code> 表示非数字集</p><h3 id="4、区间"><a href="#4、区间" class="headerlink" title="4、区间"></a>4、区间</h3><p>区间是用 <code>-</code> 表示的</p><p>数字字符类 <code>[0123456789]</code> 表示为 <code>[0-9]</code><br><br><br><br>区间主要是使用在如果使用字符类， 则串里面的内容比较长，如果使用区间表示比较简单<br><br>小写字母字符类 <code>[a-z]</code> <br><br>大写字母字符类 <code>[A-z]</code> <br><br>还可以使用间隔 <code>[0-25-7]</code>表示0、1、2、5、6、7<br></p><h3 id="5、量词"><a href="#5、量词" class="headerlink" title="5、量词"></a>5、量词</h3><table><thead><tr><th>字符</th><th>说明</th></tr></thead><tbody><tr><td>？</td><td>出现==一==次或==零==次</td></tr><tr><td>*</td><td>出现==多==次或==零==次</td></tr><tr><td>+</td><td>出现==一==次或==多==次</td></tr><tr><td>{n}</td><td>出现==零==或==n==次</td></tr><tr><td>{n,m}</td><td>至少出现==n==次，但不超过==m==次</td></tr><tr><td>{n,}</td><td>至少出现n次</td></tr><tr><td>{n, m}?</td><td>只匹配5个，惰性量词</td></tr></tbody></table><h3 id="6、分组"><a href="#6、分组" class="headerlink" title="6、分组"></a>6、分组</h3><p>自此之前学习量词只能重复显示一个字符， 如果想让一个字符串作为整体使用量词，可将这个字符串发放到一对小括号中。这就是分组。<br></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">p = <span class="string">r'(121)&#123;2&#125;'</span> <span class="comment">#正则表达式，并且创建分组(121)并且重复2次</span></span><br><span class="line">m = re.search(p, <span class="string">'121121abcabc'</span>)</span><br><span class="line"></span><br><span class="line">print(m)</span><br><span class="line">print(m.group()) <span class="comment">#返回匹配的字符串 打印121121</span></span><br><span class="line">print(m.group(<span class="number">1</span>)) <span class="comment">#返回自一个组的内容 打印121</span></span><br><span class="line">print(m.groups()) <span class="comment">#返回所有组的内容 打印('121',)</span></span><br><span class="line"></span><br><span class="line">p = <span class="string">r'(121)&#123;2&#125;(abc)&#123;2&#125;'</span></span><br><span class="line">m = re.search(p, <span class="string">'121121abcabc'</span>)</span><br><span class="line">print(m.group()) <span class="comment">#打印121121abcabc</span></span><br><span class="line">print(m.group(<span class="number">1</span>)) <span class="comment">#打印121</span></span><br><span class="line">print(m.groups()) <span class="comment">#打印('121', 'abc')</span></span><br></pre></td></tr></table></figure><p>分组还可以通过分组名字来访问<br><br>格式:p = r’(?P&lt;area_code&gt;\d{3,4})-(?P&lt;num_code&gt;\d{7,8})’<br><br> (？P<name>匹配串)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">p = <span class="string">r'(\d&#123;3,4&#125;)-(\d&#123;7,8&#125;)'</span> <span class="comment">#正则表达式，建立区号和电话号码</span></span><br><span class="line">m = re.search(p, <span class="string">'0792-87654321'</span>)</span><br><span class="line"></span><br><span class="line">print(m)</span><br><span class="line">print(m.group(<span class="number">1</span>)) </span><br><span class="line">print(m.group(<span class="number">2</span>)) </span><br><span class="line">print(m.groups())</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">&lt;_sre.SRE_Match object; span=(0, 13), match='0792-87654321'&gt;</span></span><br><span class="line"><span class="string">0792</span></span><br><span class="line"><span class="string">87654321</span></span><br><span class="line"><span class="string">('0792', '87654321')</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line">p = <span class="string">r'(?P&lt;area_code&gt;\d&#123;3,4&#125;)-(?P&lt;num_code&gt;\d&#123;7,8&#125;)'</span> <span class="comment">#区号命名为area_code,电话号码命名为num_code</span></span><br><span class="line">m = re.search(p, <span class="string">'0792-87654321'</span>)</span><br><span class="line"></span><br><span class="line">print(m.group(<span class="number">1</span>)) <span class="comment">#通过分组号访问</span></span><br><span class="line">print(m.group(<span class="number">2</span>)) </span><br><span class="line">print(m.group(<span class="string">"area_code"</span>))  <span class="comment">#通过定义的名字来访问 </span></span><br><span class="line">print(m.group(<span class="string">"num_code"</span>)) </span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">0792</span></span><br><span class="line"><span class="string">87654321</span></span><br><span class="line"><span class="string">0792</span></span><br><span class="line"><span class="string">87654321</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#通过名字与编号访问结果式一样的</span></span><br></pre></td></tr></table></figure></name></p><p>通过反向引用分组能获取特定的标签<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">p = <span class="string">r'&lt;([\w]+)&gt;.*&lt;/([\w]+)&gt;'</span>  <span class="comment">#这是正常分组</span></span><br><span class="line">m = re.search(p, <span class="string">'&lt;a&gt;aaa&lt;/a&gt;'</span>)</span><br><span class="line"></span><br><span class="line">print(m) <span class="comment">#能但会匹配结果</span></span><br><span class="line">m = re.search(p, <span class="string">'&lt;a&gt;aaa&lt;/b&gt;'</span>)</span><br><span class="line"></span><br><span class="line">print(m) <span class="comment">#能返回匹配结果</span></span><br><span class="line">p = <span class="string">r'&lt;([\w]+)&gt;.*&lt;/\1&gt;'</span>  <span class="comment">#这是反向引用分组</span></span><br><span class="line">m = re.search(p, <span class="string">'&lt;a&gt;aaa&lt;/a&gt;'</span>)</span><br><span class="line"></span><br><span class="line">print(m) <span class="comment">#能返回匹配结果</span></span><br><span class="line">m = re.search(p, <span class="string">'&lt;a&gt;aaa&lt;/b&gt;'</span>)</span><br><span class="line"></span><br><span class="line">print(m) <span class="comment">#不能返回，直接返回None</span></span><br></pre></td></tr></table></figure></p><p>在日常的时候我们，有时候想要返回某个文件的内容，返货全部的名称。但是使用普通的分组是不能使用的，这个时候我们需要使用<code>非捕获分组</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re </span><br><span class="line">s = <span class="string">'img1.jpg, img2.jpg, img3.bmp'</span></span><br><span class="line">p = <span class="string">r'\w+(\.jpg)'</span>  <span class="comment">#正常分组</span></span><br><span class="line">m = re.findall(p, s) </span><br><span class="line">print(m)  <span class="comment">#输出['.jpg', '.jpg']</span></span><br><span class="line">p = <span class="string">r'\w+(?:\.jpg)'</span>  <span class="comment">#采用非捕获分组</span></span><br><span class="line">m = re.findall(p, s) </span><br><span class="line">print(m) <span class="comment">#输出['img1.jpg', 'img2.jpg']</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;python3中正表达式中的用法笔记&quot;&gt;&lt;a href=&quot;#python3中正表达式中的用法笔记&quot; class=&quot;headerlink&quot; title=&quot;python3中正表达式中的用法笔记&quot;&gt;&lt;/a&gt;python3中正表达式中的用法笔记&lt;/h1&gt;&lt;p&gt;由于自己对正则表达式不是很熟悉，自己就重新学习了一下这个正则表达式。下面是我学习正则表达式的一些笔记，自己主要是用于备忘与查询&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>markdown学习笔记</title>
    <link href="https://yydwb.club/2018/04/15/markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://yydwb.club/2018/04/15/markdown学习笔记/</id>
    <published>2018-04-15T13:18:13.000Z</published>
    <updated>2018-07-14T15:59:54.221Z</updated>
    
    <content type="html"><![CDATA[<p>这里是我学习markdown的一些笔记用于自己忘记的时候复习，当然你也欢迎您对我意见。<br><a id="more"></a><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br></pre></td></tr></table></figure></p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">## 二级标题</span></span><br></pre></td></tr></table></figure><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">### 三级标题</span></span><br></pre></td></tr></table></figure><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#### 四级标题</span></span><br></pre></td></tr></table></figure><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">##### 五级标题</span></span><br></pre></td></tr></table></figure><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">###### 六级标题</span></span><br></pre></td></tr></table></figure><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这是一个段落，根据人脑的思维我们可以根据句号来判断是一句话。</span><br><span class="line">在markdown里面我们可以根据换行来判断他是一句话。但是markdown显示的时候把他显示成一段话。如果我们要表示两段话我们可以用两个换行。比如这样。</span><br><span class="line"> </span><br><span class="line">我不是孤单一个人。</span><br></pre></td></tr></table></figure><font size="2">这是一个段落，根据人脑的思维我们可以根据句号来判断是一句话。<br>在markdown里面我们可以根据换行来判断他是一句话。但是markdown显示的时候把他显示成一段话。如果我们要表示两段话我们可以用两个换行。比如这样。</font><br><font size="2">我不是孤单一个人。</font><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这里是加粗的文字。**</span></span><br></pre></td></tr></table></figure><p><strong>这里是加粗的文字。</strong></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*这里表示斜体*</span></span><br></pre></td></tr></table></figure><p><em>这里表示斜体</em></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~这里是删除线~~</span><br></pre></td></tr></table></figure><p><del>这里是删除线</del></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==这里是加重==</span><br></pre></td></tr></table></figure><p>==这里是加重==</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">++这里是下划线++</span><br></pre></td></tr></table></figure><font size="2">++这里是下划线++</font><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`这里是底纹`</span></span><br></pre></td></tr></table></figure><p><code>这里是底纹</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\+++里是转移符++(本来这里表示的是带有下划线的文字)</span><br></pre></td></tr></table></figure><p>+++里是转移符++(本来这里表示的是带有下划线的文字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```markdown</span><br><span class="line">这里是区块 </span><br><span class="line">```</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~~~markdown</span><br><span class="line">这里是区块 </span><br><span class="line">~~~</span><br></pre></td></tr></table></figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">这里是区块 </span><br><span class="line">~~~ </span><br><span class="line"></span><br><span class="line">~~~markdown</span><br><span class="line"><span class="quote">&gt; 这里表示引用</span></span><br><span class="line">&gt;&gt; 这里是子引用</span><br></pre></td></tr></table></figure><blockquote><p>这里表示引用</p><blockquote><p>这里是子引用</p></blockquote></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">***</span>*</span><br><span class="line">这里是分隔线,用三个或以上 * 符号</span><br><span class="line"><span class="emphasis">***</span>*</span><br></pre></td></tr></table></figure><hr><p>这里是分隔线,用三个或以上 * 符号</p><hr><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">___</span></span><br><span class="line">这里也是分隔线，用三个或以上的 _ 符号</span><br><span class="line"><span class="emphasis">___</span></span><br></pre></td></tr></table></figure><hr><h2 id="这里也是分隔线，用三个或以上的-符号"><a href="#这里也是分隔线，用三个或以上的-符号" class="headerlink" title="这里也是分隔线，用三个或以上的 _ 符号"></a>这里也是分隔线，用三个或以上的 _ 符号</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">这里也是分隔线，用三个或以上的 - 符号</span><br><span class="line">---</span><br></pre></td></tr></table></figure><hr><h2 id="这里也是分隔线，用三个或以上的-符号-1"><a href="#这里也是分隔线，用三个或以上的-符号-1" class="headerlink" title="这里也是分隔线，用三个或以上的 - 符号"></a>这里也是分隔线，用三个或以上的 - 符号</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>这里是有序列表的第一个元素</span><br><span class="line"><span class="bullet">2. </span>这里是有序列表的第二个元素，他的子列表是无序列表：</span><br><span class="line"><span class="code">    - 这里是无序列表的第一个子元素</span></span><br><span class="line"><span class="code">    - 这里是无序列表的第二哥元素</span></span><br><span class="line"><span class="code">    - 这里是无序列表的第三个元素</span></span><br><span class="line"><span class="bullet">- </span>当然了，无序列表可以单独使用了</span><br></pre></td></tr></table></figure><ol><li>这里是有序列表的第一个元素</li><li>这里是有序列表的第二个元素，他的子列表是无序列表：<ul><li>这里是无序列表的第一个子元素</li><li>这里是无序列表的第二哥个元素</li><li>这里是无序列表的第三个元素</li></ul></li></ol><ul><li>当然了，无序列表可以单独使用了</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">你想选哪个：</span><br><span class="line"><span class="bullet">- </span>[x] 选这个，因为里面有x。</span><br><span class="line"><span class="bullet">- </span>[ ] 不选这个，因为这个中间是空的。</span><br><span class="line"><span class="bullet">- </span>[ ] 我还能扩展</span><br></pre></td></tr></table></figure><p>你想选哪个：</p><ul><li style="list-style: none"><input type="checkbox" checked> 选这个，因为里面有x。</li><li style="list-style: none"><input type="checkbox"> 不选这个，疑问这个中间是空的。</li><li style="list-style: none"><input type="checkbox"> 我还能扩展</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度的超链接</span>](<span class="link">https://www.baidu.com</span>)</span><br><span class="line"></span><br><span class="line">[<span class="string">这篇博客的超链接</span>](<span class="link">http://www.yydwb.club</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">带有百度logo</span>](<span class="link">https://www.baidu.com/img/bd_logo1.png</span>)</span><br><span class="line"></span><br><span class="line">![<span class="string">再来一个有道云笔记的logo</span>](<span class="link">http://note.youdao.com/images/index/dd55e32b.logo.png</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com" target="_blank" rel="noopener">百度的超链接</a></p><p><a href="http://www.yydwb.club" target="_blank" rel="noopener">这篇博客的超链接</a></p><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="带有百度logo"></p><p><img src="http://note.youdao.com/images/index/dd55e32b.logo.png" alt="再来一个有道云笔记的logo"></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这里是用脚注的方式来表示url,[<span class="string">百度</span>][<span class="symbol">1</span>], [<span class="string">腾讯</span>][<span class="symbol">2</span>], [<span class="string">我的博客</span>][<span class="symbol">3</span>]</span><br><span class="line"></span><br><span class="line">[<span class="symbol">1</span>]:<span class="link">htts://www.baidu.com</span></span><br><span class="line">[<span class="symbol">2</span>]:<span class="link">http://www.qq.com</span></span><br><span class="line">[<span class="symbol">3</span>]:<span class="link">http://www.yydwb.com</span></span><br></pre></td></tr></table></figure><p>这里是用脚注的方式来表示url,<a href="htts://www.baidu.com" target="_blank" rel="noopener">百度</a>, <a href="http://www.qq.com" target="_blank" rel="noopener">腾讯</a>, <a href="http://www.yydwb.com" target="_blank" rel="noopener">我的博客</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">表格的第一列  | 表格的第二列  | 空列 </span><br><span class="line">--- | ------------- | ---- </span><br><span class="line">中间有三个 -  | 也可以是三个以上的 - |</span><br><span class="line">这里还可以少一个  | 少了之后在后面自动补全</span><br><span class="line">  |  要空第一个必须多一根 | </span><br><span class="line">  | | 空前面两列是一样的</span><br></pre></td></tr></table></figure><table><thead><tr><th>表格的第一列</th><th>表格的第二列</th><th>空列 </th></tr></thead><tbody><tr><td>中间有三个 -</td><td>也可以是三个以上的 -</td><td></td></tr><tr><td>这里还可以少一个</td><td>少了之后在后面自动补全</td></tr><tr><td></td><td>要空第一个必须多一根</td><td></td></tr><tr><td></td><td></td><td>空前面两列是一样的 </td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里是我学习markdown的一些笔记用于自己忘记的时候复习，当然你也欢迎您对我意见。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于在windows下使用Hexo创建一篇新的博客</title>
    <link href="https://yydwb.club/2018/04/15/Hexo/"/>
    <id>https://yydwb.club/2018/04/15/Hexo/</id>
    <published>2018-04-15T04:18:01.000Z</published>
    <updated>2018-07-13T09:42:33.600Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到我的第一篇博客，这是我的第一篇博客。<br>下面是我学习如何用Hexok写博客的一些心得体会。<br>可能我写的不够详细，请参考<a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">hexo官方文档</a>。</p><a id="more"></a><h3 id="创建新的blog"><a href="#创建新的blog" class="headerlink" title="创建新的blog"></a>创建新的blog</h3><hr><font size="2">在cmd中自己本地的blog目录下执行以下命令</font><br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><br><br><font size="2">让我们开始看看这条命令吧。</font><br><font>title是你的博客名称</font><br><br><font size="2">其中layout表示布局，默认表示post</font><br><font size="2">其实它是这样的表示的。</font><br><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Layout  Path </span><br><span class="line">post    <span class="built_in">source</span>/_posts </span><br><span class="line">page    <span class="built_in">source</span> </span><br><span class="line">draft   <span class="built_in">source</span>/_drafts</span><br></pre></td></tr></table></figure><br><br><font size="2">我们可以在命令行下都试一遍，这样自己会更好的理解。</font><h3 id="使用草稿来写blog"><a href="#使用草稿来写blog" class="headerlink" title="使用草稿来写blog"></a>使用草稿来写blog</h3><hr><font size="2">前面我们讲过Layout，中有三个模式。其中有一个为draft模式。</font><br><font size="2"> 我们采用命令</font><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><br><br><font size="2">title必须是你的drafts文件夹中要有的文件名,换个角度来说就是你的博客的名称。</font><br><br><font size="2">&emsp;&emsp;当然这只是如何生成博客，具体的编写还是要自己在自己博客目录下source文件夹下的问价找出自己要编写的方式然后自己根据markdown语法规则来编写。</font>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;欢迎来到我的第一篇博客，这是我的第一篇博客。&lt;br&gt;下面是我学习如何用Hexok写博客的一些心得体会。&lt;br&gt;可能我写的不够详细，请参考&lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hexo官方文档&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
